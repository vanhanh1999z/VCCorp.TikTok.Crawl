<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAMMOAADDDgAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAWFhYAFhYWABYWFgAWFhYBFhYWAxcXFwEVFRUAFhYWFxcXF2IYGBioGBgY2BkZ
        GfIZGRn9Ghoa/RoaGvIbGxvYGxsbqBwcHGIdHR0XHBwcABwcHAEfHx8DICAgASAgIAAgICAAICAgAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAFhYWABYWFgAWFhYAFhYWAhcXFwMYGBgAFxcXKBcXF5sXFxfuGBgY/xgY
        GP4ZGRn/GRkZ/xoaGv8aGhr/Gxsb/xsbG/8cHBz+HBwc/x0dHe4eHh6cHh4eKB8fHwAfHx8DISEhAiEh
        IQAhISEAISEhAAAAAAAAAAAAAAAAABYWFgAWFhYAFhYWABYWFgMREREAFRUVCRYWFo0XFxf7FxcX/xgY
        GP8YGBj9GRkZ/BkZGf4aGhr/Ghoa/xsbG/8bGxv/HBwc/hwcHPwdHR39HR0d/x4eHv8eHh77Hx8fjSAg
        IAkeHh4AISEhAyIiIgAiIiIAIiIiAAAAAAAWFhYAFhYWABYWFgAWFhYDFRUVABYWFiUWFhbSFxcX/xcX
        F/wYGBj7GBgY/hkZGf8ZGRn/Ghoa/xoaGv8bGxv/Gxsb/xwcHP8cHBz/HR0d/x0dHf8eHh7+Hh4e+x8f
        H/wfHx//ICAg0iEhISUgICAAIiIiAyMjIwAjIyMAIyMjABYWFgAWFhYAFhYWAxYWFgAWFhYzFhYW6xcX
        F/8XFxf6GBgY/hgYGP8ZGRn/GRka/xsaHP8bGh3/Gxsd/xwbHv8cHB3/HBwc/x0dHf8dHR3/Hh4e/x4e
        Hv8fHx//ICAg/iAgIPohISH/ISEh6yIiIjQhISEAIiIiAyQkJAAkJCQAFhYWABYWFgIVFRUAFhYWJxYW
        FuoXFxf/FxcX+xgYGP8YGBj/GRkZ/xsbHP8cHhf/GR4P/xodEf8cIBL/HCEQ/xseFv8dHR//Hh0e/x4e
        Hv8eHh7/Hx8f/yAgIP8gICD/ISEh/yEhIfsiIiL/IiIi6iMjIyciIiIAIyMjAiUlJQAVFRUBEhISABUV
        FQoWFhbOFxcX/xcXF/sYGBj/GBgY/xkZGf8cHBv/EhQP/xEHJ/8kCGH/LQeB/ykAhv8jAm//Ixg7/x0h
        E/8eHh7/Hx4f/x8fH/8gICD/ICAg/yEhIf8hISH/IiIi/yIiIvsjIyP/IyMjziUlJQokJCQAIyMjARcX
        FwMWFhYAFhYWjBcXF/8XFxf6GBgY/xgYGP8ZGRn/Gxsb/w4OD/9BMl//moHL/8Ku4//Ht+L/tJ3f/39T
        2P8/BMv/LQt//yAhG/8fHx7/IB8g/yAgIP8hISH/ISEh/yIiIv8iIiL/IyMj/yMjI/okJCT/JCQkjCQk
        JAAkJCQDFxcXABcXFy0XFxf6FxcX/xgYGP4YGBj/GRkZ/xsbHP8ODw7/cW1s/+7p8//2+On/8PTt//H1
        +f/0+fr/+P3x/8a53P9VGeH/MAmM/x8iF/8gICL/ISEh/yEhIf8iIiL/IiIi/yMjI/8jIyP/JCQk/iQk
        JP8lJSX6JSUlLSUlJQAXFxcAFxcXmhcXF/8YGBj7GBgY/xkZGf8cHBv/Dg8V/19aLP/49uL/6enn/+zr
        7f/x7cn/5dtp/+XbX//i3bf/+f72/9DG3v9KC9//KRZV/x8jFv8iISP/IiIi/yIiIv8jIyP/IyMj/yQk
        JP8kJCT/JSUl+yUlJf8mJiaaJSUlABcXFxoXFxfqGBgY/xgYGP4ZGRn/GhoZ/xcYHv8kIQj/z8Vz/+7u
        9f/v7+n/0c7K/2VfH/9PSgH/i4IC/9nMAP/h3KX/+//1/5t45/8uAJ//IiYX/yIhJP8iIiL/IyMj/yMj
        I/8kJCT/JCQk/yUlJf8lJSX+JiYm/yYmJuonJycaFxcXYhgYGP8YGBj9GRkZ/xkZGf8dHBr/DxAf/1xT
        BP/s453/6+7z/9/V6/87Jmb/Cw4Q/xcXJ/8MDij/enUF/+XcOv/w8vP/1srr/0IIwf8iIST/IiMh/yMj
        I/8jIyP/JCQk/yQkJP8lJSX/JSUl/yYmJv8mJib9Jycn/ycnJ2IYGBinGBgY/xkZGfwZGRn/Ghoa/x0d
        Gv8PEB//fXEB/+vjov/1+/X/ooTf/x0DWv8iJhT/IyEj/xwcI/8vLhX/1s4r//Dw6//o5O//VR/L/x8b
        Kf8jJCH/IyMk/yQkJP8kJCT/JSUl/yUlJf8mJib/JiYm/ycnJ/wnJyf/KCgophgYGNYZGRn/GRkZ/hoa
        Gv8aGhr/Hh4a/w8RIf9+cwD/6N6C//b7+f+fgtz/KwCa/yIoE/8gJBf/HB4d/ywrFP/PySv/8fLs/+vo
        7/9bJs7/Hxor/yQlIf8kJCT/JCQk/yUlJf8lJSX/JiYm/yYmJv8nJyf/Jycn/igoKP8oKCjWGRkZ8RkZ
        Gf8aGhr+Ghoa/xsbG/8eHhv/EBEg/2FaBv/i1Df/7e/1/9nS3/9NFdX/KACR/x8QQP8hGDv/LSwX/9HM
        Kv/x8e3/7erw/10o0v8fGS3/JCYh/yQkJf8lJSX/JSUm/yYmJv8mJib/Jycn/ycnJ/8oKCj+KCgo/ykp
        KfEZGRn9Ghoa/xoaGv8bGxv/Gxsb/x0dHP8ZGR3/LCsc/8m7AP/j3Zb/8/b//9DF3f99T97/cTvh/0MN
        vv8sKhf/0s4q//Lx7f/t6/H/XynY/yAZMP8lJiT/JiUo/yYmJP8lJiT/JiYm/ycnJ/8nJyf/KCgo/ygo
        KP8pKSn/KSkp/RoaGv0aGhr/Gxsb/xsbG/8cHBz/HBwc/yAfHf8SEyD/aWQR/+bZBv/j36H/7/L///j+
        9f/t6vT/TxvG/yonGP/U0Sr/8fHu/+7t8f9iK93/Ixwy/yUsFf8gIxr/IyEn/ycmK/8nJyb/Jycn/ygo
        KP8oKCj/KSkp/ykpKf8qKir9Ghoa8RsbG/8bGxv+HBwc/xwcHP8dHR3/Hh4d/x8fHv8WFiH/dG8Q/9vR
        AP/q5FD/8O2u/+vl1v9MHbX/KigX/9XTKv/x8e7/8e/x/2Uv3f8WCjH/KhJe/0kdq/9XGeL/OxGZ/yUq
        Gv8oJyv/KCgo/ykpKf8pKSn+Kioq/yoqKvEbGxvWGxsb/xwcHP4cHBz/HR0d/x0dHf8eHh7/Hx8e/yAg
        H/8UFSP/QkAb/4yHAv+2sQD/tbEQ/y0qK/8sKxf/1tQr//Lx7//x8fD/aTXi/3dUw//HsPr/7ef3/8eq
        //85Bqn/JiwZ/ykoK/8pKSn/KSkp/yoqKv4qKir/Kysr1hsbG6ccHBz/HBwc/B0dHf8dHR3/Hh4e/x4e
        Hv8fHx//ICAg/yIiIP8ZGiL/FBUn/x4eJP8hIiD/Hx8j/y8vGP/W1Sv/8/Pw/+zr7//azu//+/v4//X5
        7f/5//X/zLL//zoGq/8nLRr/Kigs/ykpKf8qKir/Kioq/CsrK/8rKyumHBwcYhwcHP8dHR39HR0d/x4e
        Hv8eHh7/Hx8f/yAgIP8gICD/ISEh/yMjIf8kJCH/IyMi/yQkI/8gICb/MDAY/9fXK//y8vD/7+/w//X2
        8P/r6+7/9vT9////vP/Bu2//KBhP/yosJf8qKSr/Kioq/yoqKv8rKyv9Kysr/ywsLGIdHR0aHR0d6h0d
        Hf8eHh7+Hh4e/x8fH/8gICD/ICAg/yEhIf8hISH/IiIi/yIiIv8jIyP/JCQj/yAgJv8xMRj/2Nkr//Py
        8f/v7vD/7e3u//v7/P/AwI7/amwQ/0JFEf8mKSL/Kioq/yoqKv8qKir/Kysr/isrK/8sLCzqLCwsGh4e
        HgAeHh6aHh4e/x4eHvsfHx//ICAg/yAgIP8hISH/ISEh/yIiIv8iIiL/IyMj/yMjI/8lJST/ISEn/zEy
        Gf/Z2yv/8/Pu/+zt7P/7+/n/opa5/x0dGf8bGyv/JCMv/yopK/8qKir/Kioq/ysrK/8rKyv7LCws/yws
        LJosLCwAHh4eAB4eHi0eHh76Hx8f/yAgIP4gICD/ISEh/yEhIf8iIiL/IiIi/yMjI/8jIyP/JCQk/yUl
        JP8iISj/MjIZ/9jaLv/v7/3/9Pf7/9O8//8tE2P/JSod/y0sLP8rKyn/Kioq/yoqKv8rKyv/Kysr/iws
        LP8sLCz6LS0tLS0tLQAfHx8DHx8fAB8fH4wfHx//ICAg+iEhIf8hISH/IiIi/yIiIv8jIyP/IyMj/yQk
        JP8kJCT/JiYl/yIiJ/8zNBz/5egi//v7u////7v/i2rE/yAUQP8sLyT/KSkq/yoqKv8qKir/Kysr/ysr
        K/8sLCz6LCws/y0tLY0tLS0ALS0tAyAgIAEgICAAHx8fCiAgIM4hISH/ISEh+yIiIv8iIiL/IyMj/yMj
        I/8kJCT/JCQk/yUlJf8mJiX/IyMm/y8vJf+gow3/q64G/6+zBf9IShv/IiMq/ysrKf8qKir/Kioq/ysr
        K/8rKyv/LCws+ywsLP8tLS3OLS0tCi8vLwAtLS0BHx8fACEhIQIhISEAISEhKCEhIeoiIiL/IiIi+yMj
        I/8jIyP/JCQk/yQkJP8lJSX/JSUl/yYmJv8mJib/JiYn/x0dKf8dHSv/HR0s/yYmK/8qKin/Kioq/yoq
        Kv8rKyv/Kysr/ywsLPssLCz/LS0t6i0tLSctLS0ALS0tAi0tLQAgICAAICAgACEhIQMiIiIAIiIiNCIi
        IusjIyP/IyMj+iQkJP4kJCT/JSUl/yUlJf8mJib/JiYm/ycnJ/8nJyf/Kion/ysrKP8rKyn/Kiop/yoq
        Kv8qKir/Kysr/ysrK/4sLCz6LCws/y0tLestLS00LS0tAC0tLQMtLS0ALS0tACAgIAAhISEAISEhACIi
        IgMjIyMAIyMjJSMjI9IkJCT/JCQk/CUlJfslJSX+JiYm/yYmJv8nJyf/Jycn/ygoKP8oKCj/KSkp/ykp
        Kf8qKir/Kioq/ysrK/4rKyv7LCws/CwsLP8tLS3SLS0tJS0tLQAtLS0DLS0tAC0tLQAtLS0AAAAAACEh
        IQAiIiIAIiIiACIiIgMnJycAJCQkCSQkJI0lJSX8JSUl/yYmJv8mJib9Jycn/CcnJ/4oKCj/KCgo/ykp
        Kf8pKSn/Kioq/ioqKvwrKyv9Kysr/ywsLP8sLCz7LS0tjS0tLQkvLy8ALS0tAy0tLQAtLS0ALS0tAAAA
        AAAAAAAAAAAAACIiIgAjIyMAIyMjACMjIwIkJCQDJCQkACUlJSgmJiacJiYm7icnJ/8nJyf+KCgo/ygo
        KP8pKSn/KSkp/yoqKv8qKir/Kysr/isrK/8sLCzvLCwsnC0tLSgsLCwALS0tAy0tLQItLS0ALS0tAC0t
        LQAAAAAAAAAAAAAAAAAAAAAAAAAAACMjIwAkJCQAJCQkACQkJAEkJCQDKCgoASgoKAAnJycXJycnYigo
        KKgoKCjYKSkp8ikpKf0qKir9Kioq8isrK9grKyupLCwsYywsLBctLS0ALCwsAS0tLQMtLS0BLS0tAC0t
        LQAtLS0AAAAAAAAAAAAAAAAA9EACL+kAAJfUAAArqAAAFVAAAAqgAAAFQAAAAkAAAAKAAAABgAAAAQAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAAGAAAABQAAAAkAA
        AAKgAAAFUAAACqgAABXUAAAr6QAAl/RAAi8=
</value>
  </data>
</root>